'use client';

import React, { useState } from 'react';
import Layout from '@/components/layout/Layout';
import { NeonButton } from '@/components/ui/neon-button';
import StyledIcon from '@/components/ui/StyledIcon';
import { useTelegram } from '@/hooks/useTelegram';

export default function AdminBonusesPage() {
  const { hapticFeedback } = useTelegram();
  const [bonusSettings, setBonusSettings] = useState({
    pointsPerRub: 1, // –±–∞–ª–ª–æ–≤ –∑–∞ —Ä—É–±–ª—å
    pointsForRegistration: 100, // –±–∞–ª–ª–æ–≤ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
    pointsForReview: 50, // –±–∞–ª–ª–æ–≤ –∑–∞ –æ—Ç–∑—ã–≤
    pointsForReferral: 200, // –±–∞–ª–ª–æ–≤ –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
    minPointsToUse: 100, // –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    maxDiscountPercent: 30, // –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç —Å–∫–∏–¥–∫–∏ –æ—Ç –±–∞–ª–ª–æ–≤
    pointsExpiryDays: 365 // —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –±–∞–ª–ª–æ–≤ –≤ –¥–Ω—è—Ö
  });

  const [discounts, setDiscounts] = useState([
    {
      id: 1,
      name: '–°–∫–∏–¥–∫–∞ 10%',
      type: 'percentage',
      value: 10,
      minAmount: 0,
      isActive: true,
      description: '–°–∫–∏–¥–∫–∞ 10% –Ω–∞ –≤—Å–µ —É—Å–ª—É–≥–∏'
    },
    {
      id: 2,
      name: '–°–∫–∏–¥–∫–∞ 500‚ÇΩ',
      type: 'fixed',
      value: 500,
      minAmount: 2000,
      isActive: true,
      description: '–°–∫–∏–¥–∫–∞ 500‚ÇΩ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 2000‚ÇΩ'
    },
    {
      id: 3,
      name: '–°–∫–∏–¥–∫–∞ 20%',
      type: 'percentage',
      value: 20,
      minAmount: 5000,
      isActive: false,
      description: '–°–∫–∏–¥–∫–∞ 20% –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 5000‚ÇΩ'
    }
  ]);

  const [showAddDiscount, setShowAddDiscount] = useState(false);

  const handleBonusSettingChange = (key: string, value: number) => {
    hapticFeedback.impact('light');
    setBonusSettings(prev => ({
      ...prev,
      [key]: value
    }));
  };

  const handleDiscountToggle = (id: number) => {
    hapticFeedback.impact('light');
    setDiscounts(prev => prev.map(discount => 
      discount.id === id ? { ...discount, isActive: !discount.isActive } : discount
    ));
  };

  const handleDeleteDiscount = (id: number) => {
    hapticFeedback.impact('medium');
    setDiscounts(prev => prev.filter(discount => discount.id !== id));
  };

  const formatDiscount = (discount: any) => {
    if (discount.type === 'percentage') {
      return `${discount.value}%`;
    } else {
      return `${discount.value}‚ÇΩ`;
    }
  };

  return (
    <Layout 
      title="–ë–æ–Ω—É—Å—ã –∏ —Å–∫–∏–¥–∫–∏" 
      showBackButton={true}
      backButtonHref="/admin"
    >
      <div className="w-full max-w-sm mx-auto px-3 py-3">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="mb-4">
          <h1 className="text-xl font-bold text-white mb-1 drop-shadow-sm">
            –ë–æ–Ω—É—Å—ã –∏ —Å–∫–∏–¥–∫–∏
          </h1>
          <p className="text-white/80 text-xs">
            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π
          </p>
        </div>

        {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ–Ω—É—Å–æ–≤ */}
        <div className="bg-white/10 backdrop-blur-sm rounded-lg p-3 mb-4 border border-white/20">
          <h3 className="font-semibold text-white mb-3 drop-shadow-sm text-sm">üéÅ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ–Ω—É—Å–æ–≤</h3>
          <div className="space-y-3">
            <div>
              <label className="block text-xs font-medium text-white/80 mb-1">
                –ë–∞–ª–ª–æ–≤ –∑–∞ —Ä—É–±–ª—å
              </label>
              <input
                type="number"
                value={bonusSettings.pointsPerRub}
                onChange={(e) => handleBonusSettingChange('pointsPerRub', parseInt(e.target.value))}
                className="w-full px-2 py-1 bg-white/10 border border-white/20 rounded text-white text-xs focus:outline-none focus:ring-1 focus:ring-primary-500"
                min="0"
                max="10"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-white/80 mb-2">
                –ë–∞–ª–ª–æ–≤ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
              </label>
              <input
                type="number"
                value={bonusSettings.pointsForRegistration}
                onChange={(e) => handleBonusSettingChange('pointsForRegistration', parseInt(e.target.value))}
                className="w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-primary-500"
                min="0"
                max="1000"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-white/80 mb-2">
                –ë–∞–ª–ª–æ–≤ –∑–∞ –æ—Ç–∑—ã–≤
              </label>
              <input
                type="number"
                value={bonusSettings.pointsForReview}
                onChange={(e) => handleBonusSettingChange('pointsForReview', parseInt(e.target.value))}
                className="w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-primary-500"
                min="0"
                max="500"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-white/80 mb-2">
                –ë–∞–ª–ª–æ–≤ –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
              </label>
              <input
                type="number"
                value={bonusSettings.pointsForReferral}
                onChange={(e) => handleBonusSettingChange('pointsForReferral', parseInt(e.target.value))}
                className="w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-primary-500"
                min="0"
                max="1000"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-white/80 mb-2">
                –ú–∏–Ω–∏–º—É–º –±–∞–ª–ª–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
              </label>
              <input
                type="number"
                value={bonusSettings.minPointsToUse}
                onChange={(e) => handleBonusSettingChange('minPointsToUse', parseInt(e.target.value))}
                className="w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-primary-500"
                min="0"
                max="1000"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-white/80 mb-2">
                –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞ –æ—Ç –±–∞–ª–ª–æ–≤ (%)
              </label>
              <input
                type="number"
                value={bonusSettings.maxDiscountPercent}
                onChange={(e) => handleBonusSettingChange('maxDiscountPercent', parseInt(e.target.value))}
                className="w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-primary-500"
                min="0"
                max="100"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-white/80 mb-2">
                –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –±–∞–ª–ª–æ–≤ (–¥–Ω–∏)
              </label>
              <input
                type="number"
                value={bonusSettings.pointsExpiryDays}
                onChange={(e) => handleBonusSettingChange('pointsExpiryDays', parseInt(e.target.value))}
                className="w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-primary-500"
                min="30"
                max="1095"
              />
            </div>
          </div>
        </div>

        {/* –°–∫–∏–¥–∫–∏ */}
        <div className="mb-6">
          <div className="flex items-center justify-between mb-4">
            <h3 className="font-semibold text-white drop-shadow-sm">üí∞ –°–∫–∏–¥–∫–∏</h3>
            <NeonButton
              variant="primary"
              size="sm"
              onClick={() => setShowAddDiscount(true)}
              className="flex items-center space-x-2"
            >
              <StyledIcon name="briefcase" size="sm" variant="primary" />
              <span>–î–æ–±–∞–≤–∏—Ç—å</span>
            </NeonButton>
          </div>

          <div className="space-y-4">
            {discounts.map((discount, index) => (
              <div
                key={discount.id}
                className="bg-gray-800/50 backdrop-blur-sm border border-gray-600/30 rounded-xl p-4 hover:border-gray-500/50 transition-all duration-200"
                style={{ animationDelay: `${index * 100}ms` }}
              >
                <div className="flex items-center justify-between mb-3">
                  <div className="flex items-center space-x-3">
                    <div className="w-10 h-10 bg-primary-500 rounded-lg flex items-center justify-center text-white font-bold shadow-lg">
                      <StyledIcon name="briefcase" size="sm" variant="primary" />
                    </div>
                    <div>
                      <h4 className="font-bold text-white text-lg drop-shadow-sm">
                        {discount.name}
                      </h4>
                      <p className="text-white/70 text-sm">
                        {discount.description}
                      </p>
                    </div>
                  </div>
                  <div className="flex items-center space-x-2">
                    <div className={`w-2 h-2 rounded-full ${discount.isActive ? 'bg-green-400' : 'bg-red-400'}`}></div>
                    <span className="text-xs text-white/60">
                      {discount.isActive ? '–ê–∫—Ç–∏–≤–Ω–∞' : '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞'}
                    </span>
                  </div>
                </div>

                <div className="flex items-center justify-between mb-3">
                  <div className="text-white/80 text-sm">–†–∞–∑–º–µ—Ä —Å–∫–∏–¥–∫–∏:</div>
                  <div className="text-green-400 font-bold text-lg">
                    {formatDiscount(discount)}
                  </div>
                </div>

                <div className="flex items-center justify-between mb-3">
                  <div className="text-white/80 text-sm">–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞:</div>
                  <div className="text-white font-medium">
                    {discount.minAmount}‚ÇΩ
                  </div>
                </div>

                <div className="flex items-center justify-end space-x-2 pt-3 border-t border-gray-600/30">
                  <NeonButton
                    variant="ghost"
                    size="sm"
                    onClick={() => handleDiscountToggle(discount.id)}
                    className="text-xs"
                  >
                    {discount.isActive ? '–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å' : '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å'}
                  </NeonButton>
                  <NeonButton
                    variant="primary"
                    size="sm"
                    onClick={() => {/* –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ */}}
                    className="text-xs"
                  >
                    –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                  </NeonButton>
                  <NeonButton
                    variant="default"
                    size="sm"
                    onClick={() => handleDeleteDiscount(discount.id)}
                    className="text-xs text-red-400 hover:text-red-300"
                  >
                    –£–¥–∞–ª–∏—Ç—å
                  </NeonButton>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ–Ω—É—Å–æ–≤ */}
        <div className="bg-white/10 backdrop-blur-sm rounded-xl p-4 mb-6 border border-white/20">
          <h3 className="font-semibold text-white mb-3 drop-shadow-sm">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ–Ω—É—Å–æ–≤</h3>
          <div className="grid grid-cols-2 gap-4 text-sm">
            <div className="text-center">
              <div className="text-white/80">–ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–∫–∏–¥–æ–∫</div>
              <div className="text-green-400 font-bold">
                {discounts.filter(d => d.isActive).length}
              </div>
            </div>
            <div className="text-center">
              <div className="text-white/80">–í—ã–¥–∞–Ω–Ω—ã—Ö –±–∞–ª–ª–æ–≤</div>
              <div className="text-blue-400 font-bold">15,420</div>
            </div>
            <div className="text-center">
              <div className="text-white/80">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –±–∞–ª–ª–æ–≤</div>
              <div className="text-yellow-400 font-bold">8,750</div>
            </div>
            <div className="text-center">
              <div className="text-white/80">–≠–∫–æ–Ω–æ–º–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤</div>
              <div className="text-green-400 font-bold">‚ÇΩ12,500</div>
            </div>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <div className="flex items-center justify-between">
          <NeonButton
            variant="ghost"
            size="sm"
            onClick={() => {
              // –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫
              setBonusSettings({
                pointsPerRub: 1,
                pointsForRegistration: 100,
                pointsForReview: 50,
                pointsForReferral: 200,
                minPointsToUse: 100,
                maxDiscountPercent: 30,
                pointsExpiryDays: 365
              });
            }}
          >
            –°–±—Ä–æ—Å–∏—Ç—å
          </NeonButton>
          <NeonButton
            variant="primary"
            size="sm"
            onClick={() => {
              hapticFeedback.impact('medium');
              // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
              console.log('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
            }}
          >
            –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
          </NeonButton>
        </div>

        {/* –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏ */}
        {showAddDiscount && (
          <div className="fixed inset-0 bg-black/70 backdrop-blur-sm flex items-center justify-center p-4 z-50">
            <div className="bg-gray-900/95 backdrop-blur-xl rounded-xl p-6 w-full max-w-md border border-white/20">
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-lg font-semibold text-white">–î–æ–±–∞–≤–∏—Ç—å —Å–∫–∏–¥–∫—É</h3>
                <button
                  onClick={() => setShowAddDiscount(false)}
                  className="text-white/60 hover:text-white transition-colors"
                >
                  <StyledIcon name="arrow-left" size="sm" variant="default" />
                </button>
              </div>
              
              <div className="space-y-4">
                <div>
                  <label className="block text-sm font-medium text-white/80 mb-2">
                    –ù–∞–∑–≤–∞–Ω–∏–µ —Å–∫–∏–¥–∫–∏
                  </label>
                  <input
                    type="text"
                    className="w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-primary-500"
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ"
                  />
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-white/80 mb-2">
                    –¢–∏–ø —Å–∫–∏–¥–∫–∏
                  </label>
                  <select className="w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-primary-500">
                    <option value="percentage">–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è</option>
                    <option value="fixed">–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è</option>
                  </select>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-white/80 mb-2">
                    –†–∞–∑–º–µ—Ä —Å–∫–∏–¥–∫–∏
                  </label>
                  <input
                    type="number"
                    className="w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-primary-500"
                    placeholder="0"
                    min="1"
                    max="100"
                  />
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-white/80 mb-2">
                    –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞
                  </label>
                  <input
                    type="number"
                    className="w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-primary-500"
                    placeholder="0"
                    min="0"
                  />
                </div>
              </div>
              
              <div className="flex items-center justify-end space-x-3 mt-6">
                <NeonButton
                  variant="ghost"
                  size="sm"
                  onClick={() => setShowAddDiscount(false)}
                >
                  –û—Ç–º–µ–Ω–∞
                </NeonButton>
                <NeonButton
                  variant="primary"
                  size="sm"
                  onClick={() => {
                    // –õ–æ–≥–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏
                    setShowAddDiscount(false);
                  }}
                >
                  –î–æ–±–∞–≤–∏—Ç—å
                </NeonButton>
              </div>
            </div>
          </div>
        )}
      </div>
    </Layout>
  );
}
