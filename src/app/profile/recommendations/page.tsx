'use client';

import React, { useState } from 'react';
import Layout from '@/components/layout/Layout';
import { NeonButton } from '@/components/ui/neon-button';
import { useTelegram } from '@/hooks/useTelegram';

// –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
const mockRecommendations = [
  {
    id: 1,
    type: 'service',
    title: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å',
    description: '–û—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è—Ö, –º—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ—Ü–µ–¥—É—Ä—É "–õ–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Å–Ω–∏—Ü"',
    service: {
      name: '–õ–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Å–Ω–∏—Ü',
      duration: '60 –º–∏–Ω',
      price: 3500,
      master: '–ê–Ω–Ω–∞ –ò–≤–∞–Ω–æ–≤–∞',
      rating: 4.9
    },
    reason: '–í—ã —á–∞—Å—Ç–æ –¥–µ–ª–∞–µ—Ç–µ –º–∞–Ω–∏–∫—é—Ä, –≤–æ–∑–º–æ–∂–Ω–æ, –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è —É—Ö–æ–¥ –∑–∞ —Ä–µ—Å–Ω–∏—Ü–∞–º–∏',
    priority: 'high',
    category: 'beauty'
  },
  {
    id: 2,
    type: 'care',
    title: '–°–æ–≤–µ—Ç –ø–æ —É—Ö–æ–¥—É',
    description: '–î–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∫—Ä–∞—Å–æ—Ç—ã –Ω–æ–≥—Ç–µ–π –ø–æ—Å–ª–µ –º–∞–Ω–∏–∫—é—Ä–∞',
    tip: {
      title: '–£—Ö–æ–¥ –∑–∞ –Ω–æ–≥—Ç—è–º–∏ –¥–æ–º–∞',
      steps: [
        '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —É–≤–ª–∞–∂–Ω—è—é—â–∏–π –∫—Ä–µ–º –¥–ª—è —Ä—É–∫ 2-3 —Ä–∞–∑–∞ –≤ –¥–µ–Ω—å',
        '–ù–∞–Ω–æ—Å–∏—Ç–µ –º–∞—Å–ª–æ –¥–ª—è –∫—É—Ç–∏–∫—É–ª—ã –ø–µ—Ä–µ–¥ —Å–Ω–æ–º',
        '–ò–∑–±–µ–≥–∞–π—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ —Å –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º–∏ –º–æ—é—â–∏–º–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏',
        '–ù–æ—Å–∏—Ç–µ –ø–µ—Ä—á–∞—Ç–∫–∏ –ø—Ä–∏ —É–±–æ—Ä–∫–µ'
      ]
    },
    reason: '–í–∞—à –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–∞–Ω–∏–∫—é—Ä –±—ã–ª 2 –Ω–µ–¥–µ–ª–∏ –Ω–∞–∑–∞–¥',
    priority: 'medium',
    category: 'care'
  },
  {
    id: 3,
    type: 'schedule',
    title: '–û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–ø–∏—Å–∏',
    description: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é',
    schedule: {
      bestDays: ['–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞'],
      bestTimes: ['10:00-12:00', '14:00-16:00'],
      reason: '–ú–µ–Ω—å—à–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å, –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—É'
    },
    reason: '–í—ã –æ–±—ã—á–Ω–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç–µ—Å—å –≤ –±—É–¥–Ω–∏–µ –¥–Ω–∏',
    priority: 'low',
    category: 'schedule'
  },
  {
    id: 4,
    type: 'promotion',
    title: '–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ',
    description: '–¢–æ–ª—å–∫–æ –¥–ª—è –≤–∞—Å - —Å–∫–∏–¥–∫–∞ 20% –Ω–∞ –∫–æ–º–ø–ª–µ–∫—Å –ø—Ä–æ—Ü–µ–¥—É—Ä',
    promotion: {
      title: '–ö–æ–º–ø–ª–µ–∫—Å "–ö—Ä–∞—Å–æ—Ç–∞ —Ä—É–∫"',
      originalPrice: 5000,
      discountPrice: 4000,
      services: ['–ú–∞–Ω–∏–∫—é—Ä + –ø–æ–∫—Ä—ã—Ç–∏–µ', '–î–∏–∑–∞–π–Ω –Ω–æ–≥—Ç–µ–π', '–£—Ö–æ–¥ –∑–∞ –∫—É—Ç–∏–∫—É–ª–æ–π'],
      validUntil: '2024-02-15'
    },
    reason: '–í—ã —á–∞—Å—Ç–æ –∑–∞–∫–∞–∑—ã–≤–∞–µ—Ç–µ –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã',
    priority: 'high',
    category: 'promotion'
  }
];

const priorityConfig = {
  high: {
    color: 'text-red-400',
    bgColor: 'bg-red-500/20',
    borderColor: 'border-red-400/30',
    icon: 'üî•'
  },
  medium: {
    color: 'text-yellow-400',
    bgColor: 'bg-yellow-500/20',
    borderColor: 'border-yellow-400/30',
    icon: '‚≠ê'
  },
  low: {
    color: 'text-blue-400',
    bgColor: 'bg-blue-500/20',
    borderColor: 'border-blue-400/30',
    icon: 'üí°'
  }
};

const categoryConfig = {
  beauty: { icon: 'üíÖ', color: 'text-pink-400' },
  care: { icon: 'üß¥', color: 'text-blue-400' },
  schedule: { icon: 'üìÖ', color: 'text-green-400' },
  promotion: { icon: 'üéÅ', color: 'text-purple-400' }
};

export default function RecommendationsPage() {
  const { hapticFeedback } = useTelegram();
  const [selectedFilter, setSelectedFilter] = useState<'all' | 'beauty' | 'care' | 'schedule' | 'promotion'>('all');

  const formatPrice = (price: number) => {
    return new Intl.NumberFormat('ru-RU', {
      style: 'currency',
      currency: 'RUB',
      minimumFractionDigits: 0
    }).format(price);
  };

  const handleFilterChange = (filter: 'all' | 'beauty' | 'care' | 'schedule' | 'promotion') => {
    setSelectedFilter(filter);
    hapticFeedback.impact('light');
  };

  const handleBookService = (serviceId: number) => {
    hapticFeedback.impact('light');
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∑–∞–ø–∏—Å–∏ –Ω–∞ —É—Å–ª—É–≥—É
    console.log('–ó–∞–ø–∏—Å—å –Ω–∞ —É—Å–ª—É–≥—É:', serviceId);
  };

  const handleApplyPromotion = (promotionId: number) => {
    hapticFeedback.impact('light');
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏
    console.log('–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏:', promotionId);
  };

  const handleDismissRecommendation = (recommendationId: number) => {
    hapticFeedback.impact('light');
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–∫—Ä—ã—Ç–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    console.log('–°–∫—Ä—ã—Ç–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:', recommendationId);
  };

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
  const filteredRecommendations = mockRecommendations.filter(rec => 
    selectedFilter === 'all' || rec.category === selectedFilter
  );

  return (
    <Layout 
      title="–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"
      showBackButton={true}
      backButtonHref="/profile"
    >
      <div className="container mx-auto max-w-sm px-4 py-4">
        {/* –§–∏–ª—å—Ç—Ä—ã */}
        <div className="flex flex-wrap gap-2 mb-6">
          {[
            { key: 'all', label: '–í—Å–µ', icon: 'üìã' },
            { key: 'beauty', label: '–ö—Ä–∞—Å–æ—Ç–∞', icon: 'üíÖ' },
            { key: 'care', label: '–£—Ö–æ–¥', icon: 'üß¥' },
            { key: 'schedule', label: '–í—Ä–µ–º—è', icon: 'üìÖ' },
            { key: 'promotion', label: '–ê–∫—Ü–∏–∏', icon: 'üéÅ' }
          ].map((filter) => {
            const isActive = selectedFilter === filter.key;
            return (
              <button
                key={filter.key}
                onClick={() => handleFilterChange(filter.key as any)}
                className={`px-3 py-2 rounded-lg text-sm font-medium transition-all duration-200 ${
                  isActive
                    ? 'bg-primary-500 text-white shadow-lg'
                    : 'bg-white/10 text-white/70 hover:text-white hover:bg-white/20 border border-white/20'
                }`}
              >
                <span className="mr-1">{filter.icon}</span>
                {filter.label}
              </button>
            );
          })}
        </div>

        {/* –°–ø–∏—Å–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π */}
        <div className="space-y-4">
          {filteredRecommendations.length === 0 ? (
            <div className="text-center py-12">
              <div className="text-6xl mb-4">üí°</div>
              <h3 className="text-lg font-semibold text-white mb-2 drop-shadow-sm">
                –ù–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
              </h3>
              <p className="text-white/70">
                –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ—è–≤—è—Ç—Å—è –ø–æ—Å–ª–µ –≤–∞—à–∏—Ö –ø–µ—Ä–≤—ã—Ö –ø–æ—Å–µ—â–µ–Ω–∏–π
              </p>
            </div>
          ) : (
            filteredRecommendations.map((recommendation) => {
              const priority = priorityConfig[recommendation.priority as keyof typeof priorityConfig];
              const category = categoryConfig[recommendation.category as keyof typeof categoryConfig];
              
              return (
                <div
                  key={recommendation.id}
                  className="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-5 animate-fade-in"
                >
                  {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º */}
                  <div className="flex items-start justify-between mb-4">
                    <div className="flex items-center space-x-3">
                      <span className="text-2xl">{category.icon}</span>
                      <div>
                        <h3 className="font-semibold text-white drop-shadow-sm">
                          {recommendation.title}
                        </h3>
                        <p className="text-sm text-white/70">{recommendation.description}</p>
                      </div>
                    </div>
                    
                    <div className={`px-2 py-1 rounded-full text-xs font-medium ${priority.bgColor} ${priority.color} border ${priority.borderColor}`}>
                      {priority.icon}
                    </div>
                  </div>

                  {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
                  <div className="mb-4">
                    {recommendation.type === 'service' && recommendation.service && (
                      <div className="bg-white/5 rounded-lg p-4 mb-4">
                        <div className="flex items-center justify-between mb-3">
                          <h4 className="font-medium text-white">{recommendation.service.name}</h4>
                          <span className="text-green-400 font-bold">{formatPrice(recommendation.service.price)}</span>
                        </div>
                        <div className="flex items-center justify-between text-sm text-white/70 mb-3">
                          <span>{recommendation.service.duration}</span>
                          <span>–ú–∞—Å—Ç–µ—Ä: {recommendation.service.master}</span>
                        </div>
                        <NeonButton
                          variant="primary"
                          size="sm"
                          className="w-full"
                          onClick={() => handleBookService(recommendation.id)}
                        >
                          üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è
                        </NeonButton>
                      </div>
                    )}

                    {recommendation.type === 'care' && recommendation.tip && (
                      <div className="bg-white/5 rounded-lg p-4 mb-4">
                        <h4 className="font-medium text-white mb-3">{recommendation.tip.title}</h4>
                        <ul className="space-y-2">
                          {recommendation.tip.steps.map((step, index) => (
                            <li key={index} className="flex items-start space-x-2 text-sm text-white/80">
                              <span className="text-primary-400 mt-1">‚Ä¢</span>
                              <span>{step}</span>
                            </li>
                          ))}
                        </ul>
                      </div>
                    )}

                    {recommendation.type === 'schedule' && recommendation.schedule && (
                      <div className="bg-white/5 rounded-lg p-4 mb-4">
                        <h4 className="font-medium text-white mb-3">–õ—É—á—à–∏–µ –¥–Ω–∏ –∏ –≤—Ä–µ–º—è</h4>
                        <div className="space-y-2">
                          <div>
                            <span className="text-white/70 text-sm">–î–Ω–∏:</span>
                            <p className="text-white">{recommendation.schedule.bestDays.join(', ')}</p>
                          </div>
                          <div>
                            <span className="text-white/70 text-sm">–í—Ä–µ–º—è:</span>
                            <p className="text-white">{recommendation.schedule.bestTimes.join(', ')}</p>
                          </div>
                          <p className="text-white/70 text-sm">{recommendation.schedule.reason}</p>
                        </div>
                      </div>
                    )}

                    {recommendation.type === 'promotion' && recommendation.promotion && (
                      <div className="bg-gradient-to-r from-purple-500/20 to-pink-500/20 rounded-lg p-4 mb-4 border border-purple-400/30">
                        <div className="flex items-center justify-between mb-3">
                          <h4 className="font-medium text-white">{recommendation.promotion.title}</h4>
                          <div className="text-right">
                            <div className="text-green-400 font-bold">{formatPrice(recommendation.promotion.discountPrice)}</div>
                            <div className="text-white/60 text-sm line-through">{formatPrice(recommendation.promotion.originalPrice)}</div>
                          </div>
                        </div>
                        <div className="space-y-2 mb-3">
                          {recommendation.promotion.services.map((service, index) => (
                            <div key={index} className="flex items-center space-x-2 text-sm text-white/80">
                              <span className="text-purple-400">‚úì</span>
                              <span>{service}</span>
                            </div>
                          ))}
                        </div>
                        <div className="flex items-center justify-between">
                          <span className="text-white/70 text-sm">
                            –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: {new Date(recommendation.promotion.validUntil).toLocaleDateString('ru-RU')}
                          </span>
                          <NeonButton
                            variant="salon"
                            size="sm"
                            onClick={() => handleApplyPromotion(recommendation.id)}
                          >
                            üéÅ –ü—Ä–∏–º–µ–Ω–∏—Ç—å
                          </NeonButton>
                        </div>
                      </div>
                    )}
                  </div>

                  {/* –ü—Ä–∏—á–∏–Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
                  <div className="bg-white/5 rounded-lg p-3 mb-4">
                    <p className="text-white/70 text-sm">
                      <span className="font-medium">–ü–æ—á–µ–º—É:</span> {recommendation.reason}
                    </p>
                  </div>

                  {/* –î–µ–π—Å—Ç–≤–∏—è */}
                  <div className="flex space-x-3">
                    <NeonButton
                      variant="ghost"
                      size="sm"
                      className="flex-1"
                      onClick={() => handleDismissRecommendation(recommendation.id)}
                    >
                      ‚úï –°–∫—Ä—ã—Ç—å
                    </NeonButton>
                    <NeonButton
                      variant="ghost"
                      size="sm"
                      className="flex-1"
                      onClick={() => window.location.href = '/booking'}
                    >
                      üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è
                    </NeonButton>
                  </div>
                </div>
              );
            })
          )}
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–ø–∏—Å–∏ */}
        <div className="mt-6">
          <NeonButton
            variant="salon"
            size="xl"
            className="w-full py-4 text-lg font-bold hover:scale-105 active:scale-95 transition-all duration-300"
            onClick={() => window.location.href = '/booking'}
          >
            üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—É
          </NeonButton>
        </div>
      </div>
    </Layout>
  );
}
